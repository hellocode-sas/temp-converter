image: gradle:alpine

stages:
  - build
  - test
  - package
  - deploy

before_script:
  - echo "Start CI/CD"
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

cache:
    paths:
      - maven.repository/

build:
  stage: build
  script:
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar
      - src/main/resources/*
      - Dockerfile
    expire_in: 1 week
  only:
    - master
    - develop
    - release

test:
  stage: test
  script:
    - gradle check
  only:
    - master
    - develop
    - release

build-image:
  image: docker:latest
  stage: package
  services:
    - name: docker:dind
  script:
    - apk add --no-cache curl jq python3 py-pip
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
    - $(aws ecr get-login --no-include-email --region "${AWS_DEFAULT_REGION}")
    - docker build -t $REPOSITORY_URL:latest .
    - docker tag $REPOSITORY_URL:latest $REPOSITORY_URL:$IMAGE_TAG
    - docker push $REPOSITORY_URL:latest
    - docker push $REPOSITORY_URL:$IMAGE_TAG

deploy:
  image: python:latest
  stage: deploy
  script:
    - pip install awscli
    - echo $REPOSITORY_URL:$IMAGE_TAG
    - aws ecs update-service --region $AWS_DEFAULT_REGION --cluster $ECS_CLUSTER --service $ECS_SERVICE  --task-definition $ECS_TASK_DEFINITION


after_script:
  - echo "End CI/CD"

